server:
  port: 8081

spring:
  application:
    name: cygg-item-8081
  cloud:
    nacos:
      server-addr: 127.0.0.1:8848
  datasource:
    #   数据源基本配置
    # docker中mysql容器名称:mysqlDB8_1
    url: jdbc:mysql://mysqlDB8_1:3306/cygg?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    username: root
    password: mysqlljr0313
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #   数据源其他配置
    druid:
      #     配置初始化大小、最小、最大线程数
      initialSize: 5
      minIdle: 5
      #     CPU核数+1，也可以大些但不要超过20，数据库加锁时连接过多性能下降
      maxActive: 20
      #     最大等待时间，内网：800，外网：1200（三次握手1s）
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      #     配置一个连接在池中最大空间时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1
      testWhileIdle: true
      #     设置从连接池获取连接时是否检查连接有效性，true检查，false不检查
      testOnBorrow: true
      #     设置从连接池归还连接时是否检查连接有效性，true检查，false不检查
      testOnReturn: true
      #     可以支持PSCache（提升写入、查询效率）
      poolPreparedStatements: true
      #     保持长连接
      keepAlive: true
      maxPoolPreparedStatementPerConnectionSize: 20
      useGlobalDataSourceStat: true
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
  liquibase:
    # 是否启用，默认true
    enabled: true
    # 存储变化的文件（changelog）位置
    change-log: classpath:liquibase/master.xml
    # 数据库连接信息（部分教程说如果配置了数据库连接信息，可以选择不配置，但是我试了不行，项目时启动了，但是未执行Liquibase脚本）
    user: root
    password: mysqlljr0313
    url: jdbc:mysql://mysqlDB8_1:3306/cygg?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai
    # 执行前首先删除数据库，默认 false。若设置为 true，则执行变更前，会先删除目标数据库，请谨慎
    drop-first: false
      # 分环境执行，若在 changelog 文件中设置了对应 context 属性，则只会执行与 dev 对应值的 changeset
      # contexts: dev,test,prod

    # 执行更新时将回滚 SQL 写入的文件路径（暂未使用）
    # rollback-file:

mybatis-plus:
  type-aliases-package: io.cygg.item.model.PO
  mapper-locations: classpath:mapper/*Mapper.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto